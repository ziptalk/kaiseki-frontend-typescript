import { ethers } from "ethers";

export const stepRanges = [
  ethers.parseEther("200000000"),
  ethers.parseEther("208000000"),
  ethers.parseEther("216000000"),
  ethers.parseEther("224000000"),
  ethers.parseEther("232000000"),
  ethers.parseEther("240000000"),
  ethers.parseEther("248000000"),
  ethers.parseEther("256000000"),
  ethers.parseEther("264000000"),
  ethers.parseEther("272000000"),
  ethers.parseEther("280000000"),
  ethers.parseEther("288000000"),
  ethers.parseEther("296000000"),
  ethers.parseEther("304000000"),
  ethers.parseEther("312000000"),
  ethers.parseEther("320000000"),
  ethers.parseEther("328000000"),
  ethers.parseEther("336000000"),
  ethers.parseEther("344000000"),
  ethers.parseEther("352000000"),
  ethers.parseEther("360000000"),
  ethers.parseEther("368000000"),
  ethers.parseEther("376000000"),
  ethers.parseEther("384000000"),
  ethers.parseEther("392000000"),
  ethers.parseEther("400000000"),
  ethers.parseEther("408000000"),
  ethers.parseEther("416000000"),
  ethers.parseEther("424000000"),
  ethers.parseEther("432000000"),
  ethers.parseEther("440000000"),
  ethers.parseEther("448000000"),
  ethers.parseEther("456000000"),
  ethers.parseEther("464000000"),
  ethers.parseEther("472000000"),
  ethers.parseEther("480000000"),
  ethers.parseEther("488000000"),
  ethers.parseEther("496000000"),
  ethers.parseEther("504000000"),
  ethers.parseEther("512000000"),
  ethers.parseEther("520000000"),
  ethers.parseEther("528000000"),
  ethers.parseEther("536000000"),
  ethers.parseEther("544000000"),
  ethers.parseEther("552000000"),
  ethers.parseEther("560000000"),
  ethers.parseEther("568000000"),
  ethers.parseEther("576000000"),
  ethers.parseEther("584000000"),
  ethers.parseEther("592000000"),
  ethers.parseEther("600000000"),
  ethers.parseEther("608000000"),
  ethers.parseEther("616000000"),
  ethers.parseEther("624000000"),
  ethers.parseEther("632000000"),
  ethers.parseEther("640000000"),
  ethers.parseEther("648000000"),
  ethers.parseEther("656000000"),
  ethers.parseEther("664000000"),
  ethers.parseEther("672000000"),
  ethers.parseEther("680000000"),
  ethers.parseEther("688000000"),
  ethers.parseEther("696000000"),
  ethers.parseEther("704000000"),
  ethers.parseEther("712000000"),
  ethers.parseEther("720000000"),
  ethers.parseEther("728000000"),
  ethers.parseEther("736000000"),
  ethers.parseEther("744000000"),
  ethers.parseEther("752000000"),
  ethers.parseEther("760000000"),
  ethers.parseEther("768000000"),
  ethers.parseEther("776000000"),
  ethers.parseEther("784000000"),
  ethers.parseEther("792000000"),
  ethers.parseEther("800000000"),
  ethers.parseEther("808000000"),
  ethers.parseEther("816000000"),
  ethers.parseEther("824000000"),
  ethers.parseEther("832000000"),
  ethers.parseEther("840000000"),
  ethers.parseEther("848000000"),
  ethers.parseEther("856000000"),
  ethers.parseEther("864000000"),
  ethers.parseEther("872000000"),
  ethers.parseEther("880000000"),
  ethers.parseEther("888000000"),
  ethers.parseEther("896000000"),
  ethers.parseEther("904000000"),
  ethers.parseEther("912000000"),
  ethers.parseEther("920000000"),
  ethers.parseEther("928000000"),
  ethers.parseEther("936000000"),
  ethers.parseEther("944000000"),
  ethers.parseEther("952000000"),
  ethers.parseEther("960000000"),
  ethers.parseEther("968000000"),
  ethers.parseEther("976000000"),
  ethers.parseEther("984000000"),
  ethers.parseEther("992000000"),
  ethers.parseEther("1000000000"),
];

// export const stepPrices = [
//   ethers.parseEther("0.0000000003"),
//   ethers.parseEther("0.0000000004"),
//   ethers.parseEther("0.0000000005"),
//   ethers.parseEther("0.0000000006"),
//   ethers.parseEther("0.0000000007"),
//   ethers.parseEther("0.0000000008"),
//   ethers.parseEther("0.0000000009"),
//   ethers.parseEther("0.0000000010"),
//   ethers.parseEther("0.0000000011"),
//   ethers.parseEther("0.0000000012"),
//   ethers.parseEther("0.0000000013"),
//   ethers.parseEther("0.0000000014"),
//   ethers.parseEther("0.0000000015"),
//   ethers.parseEther("0.0000000016"),
//   ethers.parseEther("0.0000000017"),
//   ethers.parseEther("0.0000000018"),
//   ethers.parseEther("0.0000000019"),
//   ethers.parseEther("0.0000000020"),
//   ethers.parseEther("0.0000000021"),
//   ethers.parseEther("0.0000000022"),
//   ethers.parseEther("0.0000000023"),
//   ethers.parseEther("0.0000000024"),
//   ethers.parseEther("0.0000000025"),
//   ethers.parseEther("0.0000000026"),
//   ethers.parseEther("0.0000000027"),
//   ethers.parseEther("0.0000000028"),
//   ethers.parseEther("0.0000000029"),
//   ethers.parseEther("0.0000000030"),
//   ethers.parseEther("0.0000000031"),
//   ethers.parseEther("0.0000000032"),
//   ethers.parseEther("0.0000000033"),
//   ethers.parseEther("0.0000000034"),
//   ethers.parseEther("0.0000000035"),
//   ethers.parseEther("0.0000000036"),
//   ethers.parseEther("0.0000000037"),
//   ethers.parseEther("0.0000000038"),
//   ethers.parseEther("0.0000000039"),
//   ethers.parseEther("0.0000000040"),
//   ethers.parseEther("0.0000000041"),
//   ethers.parseEther("0.0000000042"),
//   ethers.parseEther("0.0000000043"),
//   ethers.parseEther("0.0000000044"),
//   ethers.parseEther("0.0000000045"),
//   ethers.parseEther("0.0000000046"),
//   ethers.parseEther("0.0000000047"),
//   ethers.parseEther("0.0000000048"),
//   ethers.parseEther("0.0000000049"),
//   ethers.parseEther("0.0000000050"),
//   ethers.parseEther("0.0000000051"),
//   ethers.parseEther("0.0000000052"),
//   ethers.parseEther("0.0000000053"),
//   ethers.parseEther("0.0000000054"),
//   ethers.parseEther("0.0000000055"),
//   ethers.parseEther("0.0000000056"),
//   ethers.parseEther("0.0000000057"),
//   ethers.parseEther("0.0000000058"),
//   ethers.parseEther("0.0000000059"),
//   ethers.parseEther("0.0000000060"),
//   ethers.parseEther("0.0000000061"),
//   ethers.parseEther("0.0000000062"),
//   ethers.parseEther("0.0000000063"),
//   ethers.parseEther("0.0000000064"),
//   ethers.parseEther("0.0000000065"),
//   ethers.parseEther("0.0000000066"),
//   ethers.parseEther("0.0000000067"),
//   ethers.parseEther("0.0000000068"),
//   ethers.parseEther("0.0000000069"),
//   ethers.parseEther("0.0000000070"),
//   ethers.parseEther("0.0000000071"),
//   ethers.parseEther("0.0000000072"),
//   ethers.parseEther("0.0000000073"),
//   ethers.parseEther("0.0000000074"),
//   ethers.parseEther("0.0000000075"),
//   ethers.parseEther("0.0000000076"),
//   ethers.parseEther("0.0000000077"),
//   ethers.parseEther("0.0000000078"),
//   ethers.parseEther("0.0000000079"),
//   ethers.parseEther("0.0000000080"),
//   ethers.parseEther("0.0000000081"),
//   ethers.parseEther("0.0000000082"),
//   ethers.parseEther("0.0000000083"),
//   ethers.parseEther("0.0000000084"),
//   ethers.parseEther("0.0000000085"),
//   ethers.parseEther("0.0000000086"),
//   ethers.parseEther("0.0000000087"),
//   ethers.parseEther("0.0000000088"),
//   ethers.parseEther("0.0000000089"),
//   ethers.parseEther("0.0000000090"),
//   ethers.parseEther("0.0000000091"),
//   ethers.parseEther("0.0000000092"),
//   ethers.parseEther("0.0000000093"),
//   ethers.parseEther("0.0000000094"),
//   ethers.parseEther("0.0000000095"),
//   ethers.parseEther("0.0000000096"),
//   ethers.parseEther("0.0000000097"),
//   ethers.parseEther("0.0000000098"),
//   ethers.parseEther("0.0000000099"),
//   ethers.parseEther("0.0000000100"),
//   ethers.parseEther("0.0000000101"),
//   ethers.parseEther("0.0000000102"),
// ];

export const stepRanges800 = () => {
  let list = [];
  for (let i = BigInt(1000000); i <= 800000000; i += BigInt(1000000)) {
    list.push(ethers.parseEther(i.toString()));
  }
  // console.log(list);
  return list;
};

export const stepPrices800 = () => {
  let increment = (0.000053125 - 0.000002125) / (800 - 1);
  let list = [];
  for (let i = 0; i < 800; i++) {
    list.push(ethers.parseEther((0.000002125 + i * increment).toFixed(9)));
  }
  // console.log(list);
  return list;
};
export const maxSupply = ethers.parseEther("1000000000");
export const creationFee = ethers.parseEther("0.0015");
export const initialPrice = 0.000000000005;

export const createStep = (threshold: number) => {
  const initialPrice = 0.000000000005;
  let list = [ethers.parseEther("0")];
  const gap = (threshold / 8000000 - 100 * initialPrice) / 4950;
  for (let i = 0; i < 100; i++) {
    list.push(ethers.parseEther((initialPrice + i * gap).toFixed(14)));
  }
  return list;
};
